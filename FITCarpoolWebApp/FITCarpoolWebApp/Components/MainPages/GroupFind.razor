@page "/Group-Find"
@using MudBlazor
@using Radzen.Blazor
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Microsoft.AspNetCore.Authorization
@using DataAccessLibrary.Data.Database
@using DataAccessLibrary.Model
@using DataAccessLibrary.Model.Database_Models
@inject IUsersData _dbUsers
@attribute [Authorize]

<RadzenStack>
    <RadzenCard Class="rz-my-12 rz-mx-auto" Style="width:75%">
        <RadzenHeading Size="H2" Text="First Carpooling Group" />
        <RadzenDataGrid Data="@FirstRecommendationUserList" TItem="UsersModel" AllowSorting="true" Style="margin-bottom: 20px;">
            <Columns>
                <RadzenDataGridColumn TItem="UsersModel" Property="Email" Title="Email" Width="200px" />
                <RadzenDataGridColumn TItem="UsersModel" Title="Name" Width="200px">
                    <Template Context="user">
                        @{
                            var fullName = $"{user.FirstName} {user.LastName}";
                        }
                        <text>@fullName</text>
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="UsersModel" Title="Role" Width="100px">
                    <Template Context="user">
                        @{
                            var role = $"{user.UserType}";
                        }
                        <text>@role</text>
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="UsersModel" Context="user" Width="140px">
                    <Template>
                        <RadzenButton Text="View User" Click="@(() => ViewUser(user.Email))" Style="width: 100%;" />
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>

        <RadzenHeading Size="H2" Text="Second Carpooling Group" />
        <RadzenDataGrid Data="@SecondRecommendationUserList" TItem="UsersModel" AllowSorting="true">
            <Columns>
                <RadzenDataGridColumn TItem="UsersModel" Property="Email" Title="Email" Width="200px" />
                <RadzenDataGridColumn TItem="UsersModel" Title="Name" Width="200px">
                    <Template Context="user">
                        @{
                            var fullName = $"{user.FirstName} {user.LastName}";
                        }
                        <text>@fullName</text>
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="UsersModel" Title="Role" Width="100px">
                    <Template Context="user">
                        @{
                            var role = $"{user.UserType}";
                        }
                        <text>@role</text>
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="UsersModel" Context="user" Width="140px">
                    <Template>
                        <RadzenButton Text="View User" Click="@(() => ViewUser(user.Email))" Style="width: 100%;" />
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    </RadzenCard>
</RadzenStack>

@code {
    private List<UsersModel> FirstRecommendationUserList = new();
    private List<UsersModel> SecondRecommendationUserList = new();

    protected override async Task OnInitializedAsync()
    {
        var allUsers = await _dbUsers.GetAllUser();
        FirstRecommendationUserList = allUsers.Take(4).ToList();
        SecondRecommendationUserList = allUsers.Skip(4).Take(4).ToList(); 
    }

    private void ViewUser(string userEmail)
    {
        NavigationManager.NavigateTo($"/Other-User-Details/{userEmail}");
    }
}