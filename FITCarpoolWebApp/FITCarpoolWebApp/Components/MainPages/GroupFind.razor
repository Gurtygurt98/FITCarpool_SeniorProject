@page "/Group-Find"
@using MudBlazor
@using Radzen.Blazor
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Microsoft.AspNetCore.Authorization
@using DataAccessLibrary.Data.Database
@using DataAccessLibrary.Model
@using DataAccessLibrary.Model.Database_Models
@inject IUsersData _dbUsers
@attribute [Authorize]

<RadzenStack>
    <RadzenCard Class="rz-my-12 rz-mx-auto" Style="width:75%">
        <RadzenStack>
            <RadzenHeading Size="H2" Text="Users" />
        </RadzenStack>
        <RadzenDataGrid Data="@UserList" TItem="UsersModel" AllowSorting="true">
            <Columns>
                <RadzenDataGridColumn TItem="UsersModel" Property="Email" Title="Email" />
                <RadzenDataGridColumn TItem="UsersModel" Title="Name">
                    <Template Context="user">
                        @{
                            var fullName = $"{user.FirstName} {user.LastName}";
                            <text>@fullName</text>
                        }
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="UsersModel" Context="user" Width="120px">
                    <Template>
                        <RadzenButton Text="View User" Click="@(() => ViewUser(user.Email))" />
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    </RadzenCard>
</RadzenStack>


@code {
    private List<Group> groups;

    protected override void OnInitialized()
    {
        groups = new List<Group>
        {
            new Group { Name = "Group 1", MaxSize = 10, CurrentSize = 5, Description = "Sample Group 1" },
            new Group { Name = "Group 2", MaxSize = 8, CurrentSize = 6, Description = "Sample Group 2" },
            new Group { Name = "Group 3", MaxSize = 15, CurrentSize = 10, Description = "Sample Group 3" }
        };
    }

    public class Group
    {
        public string? Name { get; set; }
        public int MaxSize { get; set; }
        public int CurrentSize { get; set; }
        public string? Description { get; set; }
    }


    // Code for Testing actual user table
    private List<UsersModel> UserList = new();

    protected override async Task OnInitializedAsync()
    {
        UserList = await _dbUsers.GetAllUser();
        UserList = UserList.Take(4).ToList();
    }

    private void ViewUser(string userEmail)
    {
        NavigationManager.NavigateTo($"/Other-User-Details/{userEmail}");
    }
}
