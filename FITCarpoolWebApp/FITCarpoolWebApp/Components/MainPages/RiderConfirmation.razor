@inject NavigationManager NavigationManager
@inject IUsersData _dbUsers
@using DataAccessLibrary.Data.Database
@using DataAccessLibrary.Model
@using DataAccessLibrary.Model.Database_Models
@using FITCarpoolWebApp.Components.MainPages
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using FITCarpoolWebApp.Data
@inject HttpClient httpClient
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NotificationService NotificationService

@using Radzen.Blazor
@page "/Rider-Confirmation"

<RadzenCard Class="rz-my-12 rz-mx-auto" Style="width:75%">

    <MudText Typo="Typo.h2" Align="Align.Center">Upcoming Trip</MudText>
    <MudText Typo="Typo.h3" Align="Align.Center">Date: Monday, Oct. 1, 09:00 AM</MudText>
    <MudText Typo="Typo.h4" Align="Align.Center">Group Name: Morning Class Ride</MudText>

    <RadzenStack Orientation="Radzen.Orientation.Horizontal" AlignItems="Radzen.AlignItems.Center" JustifyContent="JustifyContent.Center" Gap="1rem" Wrap="FlexWrap.Wrap">

        <RadzenButton Text="Accept Ride" ButtonStyle="ButtonStyle.Success" Click="@(() => AcceptRide(selectedUser.Email))" />
        <RadzenButton Text="Cancel Ride" ButtonStyle="ButtonStyle.Danger" Click="@(() => CancelRide(selectedUser.Email))" />
    </RadzenStack>


    @*Driver Information*@
    <RadzenCard Class="rz-my-12 rz-mx-auto" Style="width:65%">
        <MudText Typo="Typo.h4" Align="Align.Center">Driver's Information</MudText>

        <RadzenStack Orientation="Radzen.Orientation.Horizontal" JustifyContent="JustifyContent.Start" AlignItems="Radzen.AlignItems.Center" Gap="1rem" class="rz-p-4">

            @if (InputModel.ProfilePicture == null)
            {
                <RadzenImage Path="https://cdn.create.vista.com/api/media/medium/137014128/stock-vector-user-profile-icon?token" Style="width: 100px; height: 100px; border-radius: 50%;" />
            }

            @if (InputModel.ProfilePicture != null)
            {
                <RadzenImage Path="@($"data:image/jpeg;base64,{Convert.ToBase64String(InputModel.ProfilePicture)}")" AlternateText="binary image" Style="width: 100px; height: 100px; border-radius: 50%;" />
            }

            <RadzenStack Gap="0">
                <RadzenText TextStyle="TextStyle.H5" class="rz-display-flex rz-mt-2 rz-my-0">
                    Current Driver: NAME
                </RadzenText>
                <RadzenText TextStyle="TextStyle.H5" class="rz-display-flex rz-mt-2 rz-my-0">
                    Contact Information: Phone
                </RadzenText>
            </RadzenStack>
        </RadzenStack>



        @*Car Information*@
        <RadzenStack Orientation="Radzen.Orientation.Horizontal" JustifyContent="JustifyContent.Start" AlignItems="Radzen.AlignItems.Center" Gap="1rem" class="rz-p-4">


            @if (InputModel.CarPicture == null)
            {
                <RadzenImage Path="https://carden.com.py/miniatura/default.jpg" Style="width: 100px; height: 100px; border-radius: 50%;" />
            }

            @if (InputModel.CarPicture != null)
            {
                <RadzenImage Path="@($"data:image/jpeg;base64,{Convert.ToBase64String(InputModel.CarPicture)}")" AlternateText="binary image" Style="width: 100px; height: 100px; border-radius: 50%;" />
            }

            <RadzenStack Gap="0">
                <RadzenText TextStyle="TextStyle.H5" class="rz-display-flex rz-mt-2 rz-my-0">
                    Make and Model: NAME
                </RadzenText>
                <RadzenText TextStyle="TextStyle.H5" class="rz-display-flex rz-mt-2 rz-my-0">
                    License Plate: PLATE
                </RadzenText>
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>



    <RadzenCard Class="rz-my-12 rz-mx-auto" Style="width:65%">
        <MudText Typo="Typo.h4" Align="Align.Center">Passengers</MudText>
        @*Passenger Information*@
        <RadzenStack Orientation="Radzen.Orientation.Horizontal" JustifyContent="JustifyContent.Start" AlignItems="Radzen.AlignItems.Center" Gap="1rem" class="rz-p-4">


            @if (InputModel.ProfilePicture == null)
            {
                <RadzenImage Path="https://cdn.create.vista.com/api/media/medium/137014128/stock-vector-user-profile-icon?token" Style="width: 100px; height: 100px; border-radius: 50%;" />
            }

            @if (InputModel.ProfilePicture != null)
            {
                <RadzenImage Path="@($"data:image/jpeg;base64,{Convert.ToBase64String(InputModel.ProfilePicture)}")" AlternateText="binary image" Style="width: 100px; height: 100px; border-radius: 50%;" />
            }

            <RadzenStack Gap="0">
                <RadzenText TextStyle="TextStyle.H5" class="rz-display-flex rz-mt-2 rz-my-0">
                    NAME
                </RadzenText>
            </RadzenStack>

            <RadzenStack Orientation="Radzen.Orientation.Horizontal" AlignItems="Radzen.AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0" class="rz-display-flex rz-mt-2 rz-my-0 rz-ml-auto">
                <RadzenButton Text="View User" Click="@(() => ViewUser(selectedUser.Email))" />

            </RadzenStack>
        </RadzenStack>

        @*Passenger Information*@
        <RadzenStack Orientation="Radzen.Orientation.Horizontal" JustifyContent="JustifyContent.Start" AlignItems="Radzen.AlignItems.Center" Gap="1rem" class="rz-p-4">


            @if (InputModel.ProfilePicture == null)
            {
                <RadzenImage Path="https://cdn.create.vista.com/api/media/medium/137014128/stock-vector-user-profile-icon?token" Style="width: 100px; height: 100px; border-radius: 50%;" />
            }

            @if (InputModel.ProfilePicture != null)
            {
                <RadzenImage Path="@($"data:image/jpeg;base64,{Convert.ToBase64String(InputModel.ProfilePicture)}")" AlternateText="binary image" Style="width: 100px; height: 100px; border-radius: 50%;" />
            }

            <RadzenStack Gap="0">
                <RadzenText TextStyle="TextStyle.H5" class="rz-display-flex rz-mt-2 rz-my-0">
                    NAME
                </RadzenText>
            </RadzenStack>

            <RadzenStack Orientation="Radzen.Orientation.Horizontal" AlignItems="Radzen.AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0" class="rz-display-flex rz-mt-2 rz-my-0 rz-ml-auto">
                <RadzenButton Text="View User" Click="@(() => ViewUser(selectedUser.Email))" />

            </RadzenStack>
        </RadzenStack>

        @*Passenger Information*@
        <RadzenStack Orientation="Radzen.Orientation.Horizontal" JustifyContent="JustifyContent.Start" AlignItems="Radzen.AlignItems.Center" Gap="1rem" class="rz-p-4">


            @if (InputModel.ProfilePicture == null)
            {
                <RadzenImage Path="https://cdn.create.vista.com/api/media/medium/137014128/stock-vector-user-profile-icon?token" Style="width: 100px; height: 100px; border-radius: 50%;" />
            }

            @if (InputModel.ProfilePicture != null)
            {
                <RadzenImage Path="@($"data:image/jpeg;base64,{Convert.ToBase64String(InputModel.ProfilePicture)}")" AlternateText="binary image" Style="width: 100px; height: 100px; border-radius: 50%;" />
            }

            <RadzenStack Gap="0">
                <RadzenText TextStyle="TextStyle.H5" class="rz-display-flex rz-mt-2 rz-my-0">
                    NAME
                </RadzenText>
            </RadzenStack>

            <RadzenStack Orientation="Radzen.Orientation.Horizontal" AlignItems="Radzen.AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0" class="rz-display-flex rz-mt-2 rz-my-0 rz-ml-auto">
                <RadzenButton Text="View User" Click="@(() => ViewUser(selectedUser.Email))" />

            </RadzenStack>
        </RadzenStack>

        @*Passenger Information*@
        <RadzenStack Orientation="Radzen.Orientation.Horizontal" JustifyContent="JustifyContent.Start" AlignItems="Radzen.AlignItems.Center" Gap="1rem" class="rz-p-4">


            @if (InputModel.ProfilePicture == null)
            {
                <RadzenImage Path="https://cdn.create.vista.com/api/media/medium/137014128/stock-vector-user-profile-icon?token" Style="width: 100px; height: 100px; border-radius: 50%;" />
            }

            @if (InputModel.ProfilePicture != null)
            {
                <RadzenImage Path="@($"data:image/jpeg;base64,{Convert.ToBase64String(InputModel.ProfilePicture)}")" AlternateText="binary image" Style="width: 100px; height: 100px; border-radius: 50%;" />
            }

            <RadzenStack Gap="0">

                <RadzenText TextStyle="TextStyle.H5" class="rz-display-flex rz-mt-2 rz-my-0">
                    NAME
                </RadzenText>
            </RadzenStack>

            <RadzenStack Orientation="Radzen.Orientation.Horizontal" JustifyContent="JustifyContent.End" AlignItems="Radzen.AlignItems.Center" Gap="0" class="rz-display-flex rz-mt-2 rz-my-0 rz-ml-auto">
                <RadzenButton Text="View User" Click="@(() => ViewUser(selectedUser.Email))" />
            </RadzenStack>

        </RadzenStack>
    </RadzenCard>



    @*Time Line*@
    <RadzenTimeline>
        <Items>
            <RadzenTimelineItem PointStyle="PointStyle.Primary">
                <LabelContent>
                    <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-m-0">09:00 AM</RadzenText>
                </LabelContent>
                <ChildContent>
                    Pick-up from @userAddress
                </ChildContent>
            </RadzenTimelineItem>
            <RadzenTimelineItem>
                <LabelContent>
                    <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-m-0">09:07 AM</RadzenText>
                </LabelContent>
                <ChildContent>
                    Pick-up from @userAddress
                </ChildContent>
            </RadzenTimelineItem>
            <RadzenTimelineItem>
                <LabelContent>
                    <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-m-0">09:13 AM</RadzenText>
                </LabelContent>
                <ChildContent>
                    Pick-up from @userAddress
                </ChildContent>
            </RadzenTimelineItem>
            <RadzenTimelineItem>
                <LabelContent>
                    <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-m-0">09:30 AM</RadzenText>
                </LabelContent>
                <ChildContent>
                    Drop-off at Florida Institute of Technology
                </ChildContent>
            </RadzenTimelineItem>
        </Items>
    </RadzenTimeline>




</RadzenCard>





@code {


    private UsersModel selectedUser;
    private string userFullName => InputModel?.FirstName + " " + InputModel?.LastName ?? "No user selected";
    //private List<UsersModel> UserList = new();
    UsersModel InputModel = new();
    private List<UsersModel> UserList = null;
    private string userName = "Not found";
    private string driverVehicle => InputModel?.MakeModel ?? "No information available";
    private string driverLicensePlate => InputModel?.LicensePlate ?? "No information available";
    private string userAddress => InputModel?.PickupLocation ?? "Address not available";
    private string userPhone => InputModel?.Phone ?? "Phone Number not available";

    private void ViewUser(string userEmail)
    {
        NavigationManager.NavigateTo($"/Other-User-Details/{userEmail}");
    }

    private void AcceptRide(string userEmail)
    {
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Ride Accepted " });

    }

    private void CancelRide(string userEmail)
    {
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "Ride Cancelled" });

    }


}